{
  "name": "webapp",
  "version": "0.1.0",
  "private": true,
  "homepage": "https://adrianhall.github.io/zwift-routes",
  "dependencies": {
    "@material-ui/core": "^4.9.7",
    "@material-ui/icons": "^4.9.1",
    "dexie": "^2.0.4",
    "lodash": "^4.17.19",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-media": "^1.10.0",
    "react-redux": "^7.2.0",
    "react-router-dom": "^5.1.2",
    "react-spinners-kit": "^1.9.1",
    "redux": "^4.0.5",
    "redux-logger": "^3.0.6",
    "redux-persist": "^6.0.0",
    "redux-thunk": "^2.3.0"
  },
  "devDependencies": {
    "@storybook/addon-actions": "^5.3.17",
    "@storybook/addon-links": "^5.3.17",
    "@storybook/addons": "^5.3.17",
    "@storybook/preset-create-react-app": "^2.1.0",
    "@storybook/react": "^5.3.17",
    "@testing-library/jest-dom": "^4.2.4",
    "@testing-library/react": "^9.5.0",
    "@testing-library/user-event": "^7.2.1",
    "@types/enzyme": "^3.10.5",
    "@types/enzyme-adapter-react-16": "^1.0.6",
    "@types/enzyme-to-json": "^1.5.3",
    "@types/jest": "^24.9.1",
    "@types/lodash": "^4.14.149",
    "@types/node": "^12.12.30",
    "@types/react": "^16.9.23",
    "@types/react-dom": "^16.9.5",
    "@types/react-redux": "^7.1.7",
    "@types/react-router-dom": "^5.1.3",
    "@types/redux-logger": "^3.0.7",
    "@types/redux-persist": "^4.3.1",
    "@typescript-eslint/eslint-plugin": "^2.24.0",
    "@typescript-eslint/parser": "^2.24.0",
    "eslint": "^6.8.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-node": "^11.0.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.19.0",
    "fake-indexeddb": "^3.0.0",
    "gh-pages": "^2.2.0",
    "npm-run-all": "^4.1.5",
    "react-scripts": "3.4.0",
    "typescript": "^3.7.5"
  },
  "scripts": {
    "predeploy": "run-s build",
    "deploy": "gh-pages -d build",
    "prebuild": "run-s lint coverage",
    "build": "react-scripts build",
    "build-storybook": "build-storybook -s public",
    "coverage": "react-scripts test --collect-coverage --watchAll=false",
    "eject": "react-scripts eject",
    "lint": "eslint --ext ts,tsx src",
    "start": "react-scripts start",
    "test": "react-scripts test",
    "storybook": "start-storybook -p 9009 -s public"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "es6": true
    },
    "globals": {
      "Atomics": "readonly",
      "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true
      },
      "ecmaVersion": 2018,
      "sourceType": "module"
    },
    "settings": {
      "react": {
        "version": "detect"
      }
    },
    "plugins": [
      "react",
      "promise",
      "@typescript-eslint"
    ],
    "extends": [
      "plugin:@typescript-eslint/recommended",
      "eslint:recommended",
      "plugin:promise/recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:react/recommended"
    ],
    "ignorePatterns": [
      "src/serviceWorker.ts"
    ],
    "rules": {
      "curly": [
        "error",
        "multi-line"
      ],
      "eol-last": [
        "error",
        "always"
      ],
      "eqeqeq": [
        "error",
        "always",
        {
          "null": "ignore"
        }
      ],
      "no-console": "off",
      "no-dupe-class-members": "off",
      "no-empty": "error",
      "no-fallthrough": "error",
      "no-invalid-this": "error",
      "no-redeclare": [
        "error",
        {
          "builtinGlobals": true
        }
      ],
      "no-restricted-imports": [
        "error",
        {
          "paths": [
            "rhea",
            "rhea/.*"
          ]
        }
      ],
      "no-return-await": "error",
      "no-undef": "off",
      "no-unsafe-finally": "error",
      "no-unused-vars": "off",
      "no-unused-expressions": "error",
      "no-useless-constructor": "off",
      "no-use-before-define": [
        "error",
        {
          "functions": false,
          "classes": false
        }
      ],
      "no-var": "error",
      "one-var-declaration-per-line": "error",
      "prefer-const": "error",
      "spaced-comment": [
        "error",
        "always",
        {
          "markers": [
            "/"
          ]
        }
      ],
      "space-infix-ops": [
        "error",
        {
          "int32Hint": false
        }
      ],
      "use-isnan": "error",
      "@typescript-eslint/camelcase": "off",
      "@typescript-eslint/class-name-casing": "error",
      "@typescript-eslint/no-angle-bracket-type-assertion": "off",
      "@typescript-eslint/no-array-constructor": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/explicit-function-return-type": [
        "warn",
        {
          "allowExpressions": true,
          "allowTypedFunctionExpressions": true
        }
      ],
      "@typescript-eslint/explicit-member-accessibility": "off",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/interface-name-prefix": [
        "error",
        "never"
      ],
      "@typescript-eslint/no-namespace": "off",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-unused-vars": "warn",
      "@typescript-eslint/no-useless-constructor": "error",
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/no-var-requires": "off",
      "@typescript-eslint/member-ordering": [
        "warn",
        {
          "default": [
            "instance-method",
            "method",
            "private-instance-method",
            "private-method",
            "private-static-method",
            "protected-instance-method",
            "protected-method",
            "protected-static-method",
            "public-instance-method",
            "public-method",
            "public-static-method",
            "static-method"
          ]
        }
      ]
    }
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}"
    ],
    "coveragePathIgnorePatterns": [
      "<rootDir>/src/index.tsx",
      "<rootDir>/src/serviceWorker.ts",
      "<rootDir>/src/redux/store.ts",
      "/[A-Za-z]+Application.tsx",
      "/node_modules",
      "/.*.d.ts$",
      "/.*.stories.tsx$"
    ]
  }
}
